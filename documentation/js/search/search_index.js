var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,1.888]],["body/coverage.html",[0,1.104,1,1.544,2,1.544,3,0.814,4,1.544,5,1.544,6,1.772,7,2.469,8,1.104,9,3.572,10,0.118,11,3.572,12,1.104,13,1.104,14,1.104,15,3.412,16,1.104,17,1.104,18,3.131,19,3.131,20,1.104,21,1.17,22,0.597,23,1.84,24,1.104,25,1.104,26,1.104,27,1.104,28,1.104,29,1.104,30,1.104,31,1.104,32,1.104,33,1.104,34,1.104,35,1.104,36,1.544,37,1.544,38,0.071,39,0.071]],["title/dependencies.html",[40,1.21,41,1.248]],["body/dependencies.html",[10,0.117,38,0.1,39,0.1,41,1.373,42,2.605,43,1.373,44,1.862,45,2.605,46,2.605,47,2.605,48,2.605,49,2.605,50,2.605,51,2.605,52,2.605,53,2.605]],["title/miscellaneous/functions.html",[54,0.655,55,1.693]],["body/miscellaneous/functions.html",[3,1.555,6,0.689,7,0.935,8,1.686,10,0.1,12,1.686,13,1.686,14,1.404,21,1.243,22,0.506,23,0.689,24,1.686,25,1.404,26,1.404,27,1.404,28,1.686,29,1.404,30,1.404,38,0.075,39,0.063,43,1.382,44,1.686,54,0.506,55,0.935,56,0.689,57,2.188,58,1.874,59,0.935,60,1.307,61,0.935,62,1.404,63,1.404,64,1.307,65,1.307,66,1.874,67,2.621,68,2.358,69,1.874,70,2.358,71,1.686,72,2.951,73,2.109,74,2.951,75,2.109,76,0.935,77,1.307,78,1.307,79,1.963,80,1.963,81,3.331,82,0.935,83,0.935,84,1.686,85,1.307,86,1.963,87,1.307,88,1.307,89,1.963,90,1.307,91,1.963,92,0.935,93,1.307,94,1.307,95,1.963,96,1.307,97,1.963,98,1.307,99,1.307,100,2.358,101,1.963,102,1.307,103,1.307,104,1.307,105,1.307,106,1.307,107,0.935,108,1.307,109,1.035,110,1.307,111,1.307,112,1.307,113,1.307,114,1.307,115,1.963,116,0.935]],["title/index.html",[56,0.892,117,1.693,118,1.693]],["body/index.html",[10,0.071,22,0.37,35,0.684,38,0.049,39,0.049,41,0.505,43,1.28,59,0.684,61,0.684,62,1.101,63,1.382,69,1.584,71,1.95,73,0.684,75,0.684,76,0.684,82,0.684,83,0.684,92,0.684,107,0.684,109,0.505,116,0.684,119,2.428,120,1.54,121,0.957,122,0.957,123,0.957,124,0.957,125,0.957,126,1.54,127,1.54,128,0.957,129,0.957,130,0.957,131,0.957,132,0.957,133,0.957,134,1.933,135,0.957,136,0.957,137,0.957,138,0.957,139,0.957,140,0.957,141,0.957,142,0.957,143,0.957,144,0.957,145,0.957,146,0.957,147,0.957,148,0.957,149,0.957,150,0.957,151,0.957,152,0.957,153,0.957,154,2.594,155,1.54,156,1.933,157,1.933,158,1.54,159,1.54,160,1.933,161,0.957,162,1.54,163,0.957,164,1.54,165,1.933,166,1.933,167,0.957,168,0.957,169,0.957,170,0.957,171,0.957,172,0.957,173,0.957,174,0.957,175,0.957,176,0.957,177,0.957,178,1.54,179,0.957,180,0.957,181,1.54,182,1.933,183,0.957,184,1.54,185,1.54,186,0.957,187,1.54,188,1.933,189,1.54,190,1.54,191,0.957,192,1.54,193,0.957,194,0.957,195,0.957,196,1.54,197,1.54,198,1.54,199,2.215,200,0.957,201,0.957,202,0.957,203,1.933,204,0.957,205,0.957,206,0.957,207,0.957,208,0.957,209,0.957,210,0.957,211,0.957,212,0.957,213,0.957,214,0.957,215,0.957,216,0.957,217,0.957,218,0.957,219,1.54,220,1.54,221,0.957,222,0.957,223,1.54,224,0.957,225,0.957,226,0.957,227,0.957,228,0.957,229,0.957,230,0.957,231,0.957,232,0.957,233,0.957,234,0.957,235,0.957,236,0.957,237,1.54,238,1.54,239,0.957,240,1.584,241,0.957,242,0.957,243,0.957,244,1.54,245,0.957,246,0.957,247,0.957,248,0.957,249,0.957,250,0.957,251,0.957,252,0.957,253,0.957,254,0.957,255,0.957,256,0.957,257,0.957,258,0.957,259,1.54,260,1.54,261,0.957,262,0.957,263,0.957,264,0.957,265,0.957,266,0.957,267,0.957,268,0.957,269,0.957,270,0.957,271,0.957,272,1.54,273,0.957,274,0.957,275,0.957,276,0.957,277,0.957,278,0.957,279,0.957,280,0.957,281,0.957,282,0.957,283,0.957,284,2.215,285,1.54,286,0.957,287,0.957,288,1.54,289,1.54,290,2.594,291,1.54,292,0.957,293,0.957,294,0.957,295,0.957,296,1.933,297,1.933,298,0.957,299,0.957,300,0.957,301,0.957,302,0.957,303,0.957,304,0.957,305,0.957,306,0.957,307,1.101,308,0.957,309,0.957,310,0.957,311,0.957,312,1.54,313,0.957]],["title/modules.html",[314,1.888]],["body/modules.html",[10,0.106,38,0.106,39,0.106,314,2.069]],["title/overview.html",[315,1.888]],["body/overview.html",[10,0.106,38,0.106,39,0.106,315,2.069]],["title/properties.html",[40,1.21,316,1.693]],["body/properties.html",[10,0.111,38,0.105,39,0.105,307,2.029,316,2.029,317,2.838]],["title/miscellaneous/variables.html",[54,0.655,318,1.693]],["body/miscellaneous/variables.html",[3,1.79,6,0.909,10,0.119,16,1.972,17,1.715,20,2.132,21,1.653,22,1.067,23,0.909,31,1.715,32,1.715,33,1.715,34,1.715,38,0.077,39,0.077,54,0.667,56,0.909,57,2.241,58,2.241,66,1.972,84,1.232,109,0.909,240,1.232,318,1.232,319,1.724,320,3.396,321,3.396,322,1.724,323,1.724,324,1.724,325,2.759,326,2.759,327,1.724,328,1.724,329,1.724,330,1.724]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":18,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":317,"title":{},"body":{"properties.html":{}}}],["0.0.4",{"_index":45,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":19,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":155,"title":{},"body":{"index.html":{}}}],["1/1",{"_index":11,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":9,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":185,"title":{},"body":{"index.html":{}}}],["3",{"_index":235,"title":{},"body":{"index.html":{}}}],["3000:3000",{"_index":305,"title":{},"body":{"index.html":{}}}],["5.1.1",{"_index":47,"title":{},"body":{"dependencies.html":{}}}],["5.1.7",{"_index":53,"title":{},"body":{"dependencies.html":{}}}],["6.37.1",{"_index":51,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":49,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":263,"title":{},"body":{"index.html":{}}}],["added",{"_index":223,"title":{},"body":{"index.html":{}}}],["addresses",{"_index":131,"title":{},"body":{"index.html":{}}}],["age",{"_index":148,"title":{},"body":{"index.html":{}}}],["along",{"_index":207,"title":{},"body":{"index.html":{}}}],["alongside",{"_index":218,"title":{},"body":{"index.html":{}}}],["api",{"_index":69,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app",{"_index":293,"title":{},"body":{"index.html":{}}}],["appear",{"_index":219,"title":{},"body":{"index.html":{}}}],["application",{"_index":259,"title":{},"body":{"index.html":{}}}],["audience",{"_index":141,"title":{},"body":{"index.html":{}}}],["audio",{"_index":109,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["authentication",{"_index":162,"title":{},"body":{"index.html":{}}}],["available",{"_index":184,"title":{},"body":{"index.html":{}}}],["back",{"_index":237,"title":{},"body":{"index.html":{}}}],["backend",{"_index":274,"title":{},"body":{"index.html":{}}}],["bad",{"_index":255,"title":{},"body":{"index.html":{}}}],["bar",{"_index":108,"title":{},"body":{"miscellaneous/functions.html":{}}}],["barriers",{"_index":130,"title":{},"body":{"index.html":{}}}],["basic",{"_index":164,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":46,"title":{},"body":{"dependencies.html":{}}}],["before",{"_index":175,"title":{},"body":{"index.html":{}}}],["being",{"_index":76,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["besides",{"_index":234,"title":{},"body":{"index.html":{}}}],["blobpart",{"_index":319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean",{"_index":326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["both",{"_index":257,"title":{},"body":{"index.html":{}}}],["box",{"_index":64,"title":{},"body":{"miscellaneous/functions.html":{}}}],["branch",{"_index":260,"title":{},"body":{"index.html":{}}}],["branches",{"_index":232,"title":{},"body":{"index.html":{}}}],["browser",{"_index":244,"title":{},"body":{"index.html":{}}}],["browser's",{"_index":93,"title":{},"body":{"miscellaneous/functions.html":{}}}],["build",{"_index":296,"title":{},"body":{"index.html":{}}}],["callback",{"_index":96,"title":{},"body":{"miscellaneous/functions.html":{}}}],["calls",{"_index":270,"title":{},"body":{"index.html":{}}}],["certain",{"_index":102,"title":{},"body":{"miscellaneous/functions.html":{}}}],["challenge",{"_index":124,"title":{},"body":{"index.html":{}}}],["changing",{"_index":310,"title":{},"body":{"index.html":{}}}],["chunks",{"_index":16,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["clients",{"_index":153,"title":{},"body":{"index.html":{}}}],["code",{"_index":196,"title":{},"body":{"index.html":{}}}],["come",{"_index":178,"title":{},"body":{"index.html":{}}}],["communication",{"_index":129,"title":{},"body":{"index.html":{}}}],["component",{"_index":89,"title":{},"body":{"miscellaneous/functions.html":{}}}],["components",{"_index":158,"title":{},"body":{"index.html":{}}}],["container",{"_index":301,"title":{},"body":{"index.html":{}}}],["couple",{"_index":224,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":282,"title":{},"body":{"index.html":{}}}],["createeventdispatcher",{"_index":323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currently",{"_index":160,"title":{},"body":{"index.html":{}}}],["custom",{"_index":90,"title":{},"body":{"miscellaneous/functions.html":{}}}],["customevent",{"_index":86,"title":{},"body":{"miscellaneous/functions.html":{}}}],["data",{"_index":67,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date",{"_index":265,"title":{},"body":{"index.html":{}}}],["deaf",{"_index":144,"title":{},"body":{"index.html":{}}}],["default",{"_index":320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["definition",{"_index":181,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":41,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":75,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["dev",{"_index":291,"title":{},"body":{"index.html":{}}}],["developing",{"_index":279,"title":{},"body":{"index.html":{}}}],["development",{"_index":187,"title":{},"body":{"index.html":{}}}],["diagrams",{"_index":214,"title":{},"body":{"index.html":{}}}],["dictionary",{"_index":195,"title":{},"body":{"index.html":{}}}],["dispatch",{"_index":17,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["display",{"_index":104,"title":{},"body":{"miscellaneous/functions.html":{}}}],["displays",{"_index":99,"title":{},"body":{"miscellaneous/functions.html":{}}}],["docker",{"_index":297,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{}}}],["duration",{"_index":103,"title":{},"body":{"miscellaneous/functions.html":{}}}],["each",{"_index":209,"title":{},"body":{"index.html":{}}}],["effective",{"_index":122,"title":{},"body":{"index.html":{}}}],["email",{"_index":168,"title":{},"body":{"index.html":{}}}],["emitted",{"_index":87,"title":{},"body":{"miscellaneous/functions.html":{}}}],["end",{"_index":238,"title":{},"body":{"index.html":{}}}],["error",{"_index":100,"title":{},"body":{"miscellaneous/functions.html":{}}}],["errors",{"_index":31,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":81,"title":{},"body":{"miscellaneous/functions.html":{}}}],["example",{"_index":199,"title":{},"body":{"index.html":{}}}],["facial",{"_index":204,"title":{},"body":{"index.html":{}}}],["false",{"_index":325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feature",{"_index":192,"title":{},"body":{"index.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{}}}],["filesfordocs/.../whisperrecord.ts",{"_index":58,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filesfordocs/.../wordsearch.ts",{"_index":57,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filesfordocs/whisperrecord.ts",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filesfordocs/wordsearch.ts",{"_index":23,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["folder",{"_index":217,"title":{},"body":{"index.html":{}}}],["following",{"_index":303,"title":{},"body":{"index.html":{}}}],["footer",{"_index":230,"title":{},"body":{"index.html":{}}}],["form",{"_index":115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["free",{"_index":194,"title":{},"body":{"index.html":{}}}],["friendly",{"_index":135,"title":{},"body":{"index.html":{}}}],["function",{"_index":7,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["functionality",{"_index":190,"title":{},"body":{"index.html":{}}}],["functions",{"_index":55,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gathered",{"_index":212,"title":{},"body":{"index.html":{}}}],["generate_info",{"_index":24,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["generates",{"_index":59,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["getting",{"_index":117,"title":{"index.html":{}},"body":{}}],["given",{"_index":179,"title":{},"body":{"index.html":{}}}],["global",{"_index":225,"title":{},"body":{"index.html":{}}}],["go",{"_index":271,"title":{},"body":{"index.html":{}}}],["groups",{"_index":149,"title":{},"body":{"index.html":{}}}],["handle_api_response",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["handle_api_response(word",{"_index":65,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handle_keydown",{"_index":26,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["handle_keydown(event",{"_index":78,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handled",{"_index":77,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handles",{"_index":68,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handlewhisperevent",{"_index":27,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["handlewhisperevent(event",{"_index":85,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hard",{"_index":145,"title":{},"body":{"index.html":{}}}],["hashed",{"_index":173,"title":{},"body":{"index.html":{}}}],["header",{"_index":229,"title":{},"body":{"index.html":{}}}],["hearing",{"_index":146,"title":{},"body":{"index.html":{}}}],["help",{"_index":193,"title":{},"body":{"index.html":{}}}],["highest",{"_index":250,"title":{},"body":{"index.html":{}}}],["https://github.com/cttomcak/questionable",{"_index":273,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":298,"title":{},"body":{"index.html":{}}}],["images",{"_index":202,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":189,"title":{},"body":{"index.html":{}}}],["important",{"_index":211,"title":{},"body":{"index.html":{}}}],["improvement",{"_index":138,"title":{},"body":{"index.html":{}}}],["includes",{"_index":142,"title":{},"body":{"index.html":{}}}],["including",{"_index":180,"title":{},"body":{"index.html":{}}}],["index",{"_index":56,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["individuals",{"_index":143,"title":{},"body":{"index.html":{}}}],["info",{"_index":165,"title":{},"body":{"index.html":{}}}],["information",{"_index":60,"title":{},"body":{"miscellaneous/functions.html":{}}}],["input",{"_index":82,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["inputting",{"_index":200,"title":{},"body":{"index.html":{}}}],["install",{"_index":285,"title":{},"body":{"index.html":{}}}],["installed",{"_index":283,"title":{},"body":{"index.html":{}}}],["introduction",{"_index":121,"title":{},"body":{"index.html":{}}}],["issue",{"_index":132,"title":{},"body":{"index.html":{}}}],["jsonwebtoken",{"_index":48,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":276,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":79,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keydown",{"_index":80,"title":{},"body":{"miscellaneous/functions.html":{}}}],["language",{"_index":126,"title":{},"body":{"index.html":{}}}],["layout",{"_index":226,"title":{},"body":{"index.html":{}}}],["layout.svelte",{"_index":227,"title":{},"body":{"index.html":{}}}],["leading",{"_index":128,"title":{},"body":{"index.html":{}}}],["learners",{"_index":127,"title":{},"body":{"index.html":{}}}],["levels",{"_index":151,"title":{},"body":{"index.html":{}}}],["limited",{"_index":267,"title":{},"body":{"index.html":{}}}],["looked",{"_index":262,"title":{},"body":{"index.html":{}}}],["main",{"_index":188,"title":{},"body":{"index.html":{}}}],["major",{"_index":186,"title":{},"body":{"index.html":{}}}],["make",{"_index":221,"title":{},"body":{"index.html":{}}}],["makes",{"_index":269,"title":{},"body":{"index.html":{}}}],["many",{"_index":125,"title":{},"body":{"index.html":{}}}],["matching",{"_index":39,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matter",{"_index":245,"title":{},"body":{"index.html":{}}}],["mediarecorder",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["microphone",{"_index":111,"title":{},"body":{"miscellaneous/functions.html":{}}}],["milestone",{"_index":154,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":54,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":241,"title":{},"body":{"index.html":{}}}],["models",{"_index":252,"title":{},"body":{"index.html":{}}}],["modules",{"_index":314,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":253,"title":{},"body":{"index.html":{}}}],["name",{"_index":73,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["necessary",{"_index":203,"title":{},"body":{"index.html":{}}}],["needed",{"_index":277,"title":{},"body":{"index.html":{}}}],["needs",{"_index":261,"title":{},"body":{"index.html":{}}}],["new",{"_index":35,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["nodejs",{"_index":268,"title":{},"body":{"index.html":{}}}],["notes",{"_index":157,"title":{},"body":{"index.html":{}}}],["npm",{"_index":284,"title":{},"body":{"index.html":{}}}],["null",{"_index":324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["numbers",{"_index":308,"title":{},"body":{"index.html":{}}}],["object",{"_index":84,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["offering",{"_index":133,"title":{},"body":{"index.html":{}}}],["official",{"_index":183,"title":{},"body":{"index.html":{}}}],["once",{"_index":280,"title":{},"body":{"index.html":{}}}],["one",{"_index":249,"title":{},"body":{"index.html":{}}}],["open",{"_index":292,"title":{},"body":{"index.html":{}}}],["openai's",{"_index":239,"title":{},"body":{"index.html":{}}}],["openbuilding",{"_index":295,"title":{},"body":{"index.html":{}}}],["operating",{"_index":246,"title":{},"body":{"index.html":{}}}],["optional",{"_index":74,"title":{},"body":{"miscellaneous/functions.html":{}}}],["output",{"_index":197,"title":{},"body":{"index.html":{}}}],["overview",{"_index":315,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":304,"title":{},"body":{"index.html":{}}}],["package",{"_index":40,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":166,"title":{},"body":{"index.html":{}}}],["pages",{"_index":231,"title":{},"body":{"index.html":{}}}],["pal",{"_index":120,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":72,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parent",{"_index":106,"title":{},"body":{"miscellaneous/functions.html":{}}}],["password",{"_index":169,"title":{},"body":{"index.html":{}}}],["passwords",{"_index":172,"title":{},"body":{"index.html":{}}}],["phonemes",{"_index":182,"title":{},"body":{"index.html":{}}}],["platform",{"_index":136,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":286,"title":{},"body":{"index.html":{}}}],["position",{"_index":210,"title":{},"body":{"index.html":{}}}],["positions",{"_index":205,"title":{},"body":{"index.html":{}}}],["practice",{"_index":137,"title":{},"body":{"index.html":{}}}],["preview",{"_index":312,"title":{},"body":{"index.html":{}}}],["primary",{"_index":139,"title":{},"body":{"index.html":{}}}],["production",{"_index":313,"title":{},"body":{"index.html":{}}}],["proficiency",{"_index":150,"title":{},"body":{"index.html":{}}}],["project",{"_index":159,"title":{},"body":{"index.html":{}}}],["pronounce",{"_index":206,"title":{},"body":{"index.html":{}}}],["pronunciation",{"_index":119,"title":{},"body":{"index.html":{}}}],["pronunciationpal:v1.0the",{"_index":306,"title":{},"body":{"index.html":{}}}],["pronunciationpal:v1.0then",{"_index":300,"title":{},"body":{"index.html":{}}}],["pronunciations",{"_index":256,"title":{},"body":{"index.html":{}}}],["properties",{"_index":316,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["provide",{"_index":275,"title":{},"body":{"index.html":{}}}],["provides",{"_index":228,"title":{},"body":{"index.html":{}}}],["quality",{"_index":251,"title":{},"body":{"index.html":{}}}],["reasons",{"_index":243,"title":{},"body":{"index.html":{}}}],["recognition",{"_index":44,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["recognizer",{"_index":32,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["record_speech",{"_index":28,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["recording",{"_index":21,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["release",{"_index":156,"title":{},"body":{"index.html":{}}}],["repository",{"_index":272,"title":{},"body":{"index.html":{}}}],["response",{"_index":70,"title":{},"body":{"miscellaneous/functions.html":{}}}],["result",{"_index":97,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resulting",{"_index":330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["results",{"_index":38,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["results_callback",{"_index":29,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["results_callback(result",{"_index":94,"title":{},"body":{"miscellaneous/functions.html":{}}}],["review",{"_index":233,"title":{},"body":{"index.html":{}}}],["run",{"_index":290,"title":{},"body":{"index.html":{}}}],["salted",{"_index":174,"title":{},"body":{"index.html":{}}}],["search",{"_index":62,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["search_text",{"_index":33,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["security",{"_index":170,"title":{},"body":{"index.html":{}}}],["see",{"_index":266,"title":{},"body":{"index.html":{}}}],["sends",{"_index":105,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sequelize",{"_index":50,"title":{},"body":{"dependencies.html":{}}}],["server",{"_index":289,"title":{},"body":{"index.html":{}}}],["set",{"_index":107,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["set_parent_text",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["short",{"_index":208,"title":{},"body":{"index.html":{}}}],["show_error",{"_index":30,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["show_error(error",{"_index":98,"title":{},"body":{"miscellaneous/functions.html":{}}}],["significant",{"_index":123,"title":{},"body":{"index.html":{}}}],["site",{"_index":220,"title":{},"body":{"index.html":{}}}],["soon",{"_index":222,"title":{},"body":{"index.html":{}}}],["sound",{"_index":213,"title":{},"body":{"index.html":{}}}],["speech",{"_index":43,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["speech_enabled",{"_index":34,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["speechrecognitionevent",{"_index":95,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sqlite3",{"_index":52,"title":{},"body":{"dependencies.html":{}}}],["start",{"_index":288,"title":{},"body":{"index.html":{}}}],["started",{"_index":118,"title":{"index.html":{}},"body":{}}],["startrecording",{"_index":12,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["starts",{"_index":91,"title":{},"body":{"miscellaneous/functions.html":{}}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":216,"title":{},"body":{"index.html":{}}}],["stoprecording",{"_index":13,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stops",{"_index":112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["storage",{"_index":176,"title":{},"body":{"index.html":{}}}],["stored",{"_index":278,"title":{},"body":{"index.html":{}}}],["stores",{"_index":322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":66,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["styling",{"_index":191,"title":{},"body":{"index.html":{}}}],["submission",{"_index":116,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["submitform",{"_index":14,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["submitform(event",{"_index":113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["submits",{"_index":114,"title":{},"body":{"miscellaneous/functions.html":{}}}],["support",{"_index":236,"title":{},"body":{"index.html":{}}}],["system",{"_index":247,"title":{},"body":{"index.html":{}}}],["t",{"_index":299,"title":{},"body":{"index.html":{}}}],["tab",{"_index":294,"title":{},"body":{"index.html":{}}}],["table",{"_index":37,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":36,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":177,"title":{},"body":{"index.html":{}}}],["target",{"_index":140,"title":{},"body":{"index.html":{}}}],["test",{"_index":201,"title":{},"body":{"index.html":{}}}],["text",{"_index":63,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["textbox",{"_index":83,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["therapy",{"_index":152,"title":{},"body":{"index.html":{}}}],["track",{"_index":327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transcribe",{"_index":254,"title":{},"body":{"index.html":{}}}],["transcription",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":242,"title":{},"body":{"index.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types/dom",{"_index":42,"title":{},"body":{"dependencies.html":{}}}],["up",{"_index":264,"title":{},"body":{"index.html":{}}}],["uploaded",{"_index":215,"title":{},"body":{"index.html":{}}}],["use",{"_index":302,"title":{},"body":{"index.html":{}}}],["user",{"_index":134,"title":{},"body":{"index.html":{}}}],["user's",{"_index":110,"title":{},"body":{"miscellaneous/functions.html":{}}}],["users",{"_index":171,"title":{},"body":{"index.html":{}}}],["uses",{"_index":167,"title":{},"body":{"index.html":{}}}],["using",{"_index":92,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["v1.0",{"_index":311,"title":{},"body":{"index.html":{}}}],["value",{"_index":321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":15,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":318,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":147,"title":{},"body":{"index.html":{}}}],["version",{"_index":307,"title":{},"body":{"index.html":{},"properties.html":{}}}],["visemes",{"_index":198,"title":{},"body":{"index.html":{}}}],["we're",{"_index":329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["web",{"_index":258,"title":{},"body":{"index.html":{}}}],["well",{"_index":163,"title":{},"body":{"index.html":{}}}],["whatever",{"_index":309,"title":{},"body":{"index.html":{}}}],["whether",{"_index":328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whisper",{"_index":240,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["whisperrecord",{"_index":88,"title":{},"body":{"miscellaneous/functions.html":{}}}],["word",{"_index":71,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["words",{"_index":61,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["working",{"_index":161,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":287,"title":{},"body":{"index.html":{}}}],["you're",{"_index":248,"title":{},"body":{"index.html":{}}}],["you've",{"_index":281,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                filesForDocs/WhisperRecord.ts\n            \n            function\n            set_parent_text\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                filesForDocs/WhisperRecord.ts\n            \n            function\n            startRecording\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                filesForDocs/WhisperRecord.ts\n            \n            function\n            stopRecording\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                filesForDocs/WhisperRecord.ts\n            \n            function\n            submitForm\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                filesForDocs/WhisperRecord.ts\n            \n            variable\n            chunks\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                filesForDocs/WhisperRecord.ts\n            \n            variable\n            dispatch\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                filesForDocs/WhisperRecord.ts\n            \n            variable\n            mediaRecorder\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                filesForDocs/WhisperRecord.ts\n            \n            variable\n            recording\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                filesForDocs/WhisperRecord.ts\n            \n            variable\n            transcription\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                filesForDocs/WordSearch.ts\n            \n            function\n            generate_info\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                filesForDocs/WordSearch.ts\n            \n            function\n            handle_api_response\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                filesForDocs/WordSearch.ts\n            \n            function\n            handle_keydown\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                filesForDocs/WordSearch.ts\n            \n            function\n            handleWhisperEvent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                filesForDocs/WordSearch.ts\n            \n            function\n            record_speech\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                filesForDocs/WordSearch.ts\n            \n            function\n            results_callback\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                filesForDocs/WordSearch.ts\n            \n            function\n            show_error\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                filesForDocs/WordSearch.ts\n            \n            variable\n            errors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                filesForDocs/WordSearch.ts\n            \n            variable\n            recognizer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                filesForDocs/WordSearch.ts\n            \n            variable\n            recording\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                filesForDocs/WordSearch.ts\n            \n            variable\n            search_text\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                filesForDocs/WordSearch.ts\n            \n            variable\n            speech_enabled\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @types/dom-speech-recognition : ^0.0.4\n        \n            bcrypt : ^5.1.1\n        \n            jsonwebtoken : ^9.0.2\n        \n            sequelize : ^6.37.1\n        \n            sqlite3 : ^5.1.7\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            generate_info   (filesForDocs/.../WordSearch.ts)\n                        \n                        \n                            handle_api_response   (filesForDocs/.../WordSearch.ts)\n                        \n                        \n                            handle_keydown   (filesForDocs/.../WordSearch.ts)\n                        \n                        \n                            handleWhisperEvent   (filesForDocs/.../WordSearch.ts)\n                        \n                        \n                            record_speech   (filesForDocs/.../WordSearch.ts)\n                        \n                        \n                            results_callback   (filesForDocs/.../WordSearch.ts)\n                        \n                        \n                            set_parent_text   (filesForDocs/.../WhisperRecord.ts)\n                        \n                        \n                            show_error   (filesForDocs/.../WordSearch.ts)\n                        \n                        \n                            startRecording   (filesForDocs/.../WhisperRecord.ts)\n                        \n                        \n                            stopRecording   (filesForDocs/.../WhisperRecord.ts)\n                        \n                        \n                            submitForm   (filesForDocs/.../WhisperRecord.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    filesForDocs/WordSearch.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generate_info\n                        \n                    \n                \n            \n            \n                \ngenerate_info()\n                \n            \n\n\n\n\n            \n                \n                        Generates information for words in the search text box.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handle_api_response\n                        \n                    \n                \n            \n            \n                \nhandle_api_response(word: string, data: any)\n                \n            \n\n\n\n\n            \n                \n                        Handles the API response for a word.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                word\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe word for which the API response is being handled.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe API response data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handle_keydown\n                        \n                    \n                \n            \n            \n                \nhandle_keydown(event: KeyboardEvent)\n                \n            \n\n\n\n\n            \n                \n                        Handles keydown event for input textbox.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe keydown event object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleWhisperEvent\n                        \n                    \n                \n            \n            \n                \nhandleWhisperEvent(event: CustomEvent)\n                \n            \n\n\n\n\n            \n                \n                        Handles event emitted by WhisperRecord component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        CustomEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe custom event object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        record_speech\n                        \n                    \n                \n            \n            \n                \nrecord_speech()\n                \n            \n\n\n\n\n            \n                \n                        Starts recording speech using the browser's speech recognition API.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        results_callback\n                        \n                    \n                \n            \n            \n                \nresults_callback(result: SpeechRecognitionEvent)\n                \n            \n\n\n\n\n            \n                \n                        Callback function for speech recognition results.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                result\n                                            \n                                                        SpeechRecognitionEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe result object from speech recognition.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show_error\n                        \n                    \n                \n            \n            \n                \nshow_error(error: string)\n                \n            \n\n\n\n\n            \n                \n                        Displays an error message for a certain duration.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error message to display.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    filesForDocs/WhisperRecord.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        set_parent_text\n                        \n                    \n                \n            \n            \n                \nset_parent_text()\n                \n            \n\n\n\n\n            \n                \n                        Sends an event to the parent component to set the search bar text.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startRecording\n                        \n                    \n                \n            \n            \n                \nstartRecording()\n                \n            \n\n\n\n\n            \n                \n                        Starts recording audio from the user's microphone.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopRecording\n                        \n                    \n                \n            \n            \n                \nstopRecording()\n                \n            \n\n\n\n\n            \n                \n                        Stops recording audio.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm(event: Event)\n                \n            \n\n\n\n\n            \n                \n                        Submits form data for transcription.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe form submission event.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPronunciation Pal\nIntroduction\nEffective pronunciation is a significant challenge for many language learners, often leading to communication barriers. Pronunciation Pal addresses this issue by offering a user-friendly platform for practice and improvement. The primary target audience includes individuals who are deaf and hard of hearing, language learners across various age groups and proficiency levels, and speech therapy clients.\nMilestone 1 Release Notes\nThe components of our project that are currently working for this submission are user authentication as well as a basic word info page. The user authentication uses email, name, and password. For the security of our users, the passwords are hashed and salted before storage. The basic word info page takes text (which can come from speech input) and generates info for the given words, including definition, phonemes, and official audio if available from the API.\nMilestone 2 Release Notes\nThe major development for this milestone was the main page. We implemented functionality and styling for the word search feature, where with the help of a free dictionary API, our code would output all the phonemes and visemes for the pronunciation of that word. For example, inputting the word 'test' into the textbox would output the definition, the phonemes, the pronunciation, and images for the necessary facial positions to pronounce the word (along with a short description of each position).\nAlso important, we have gathered the necessary speech sound diagrams and have uploaded them in the static folder alongside the visemes that currently appear on the site. We have not yet implemented the functionality to make them appear when using the word search feature, but that will come soon.\nWe also added a couple other components, like a global layout in +layout.svelte that provides a header and footer for all the pages on our site.\nThere are currently no other branches to review besides 'main'.\nMilestone 3 Release Notes\nIn this milestone, we added support with our back-end for OpenAI's Whisper speech-to-text model. This is for two reasons: 1. So that speech-to-text transcription is available on every browser, no matter what operating system you're on, and 2. Because it is one of the highest quality models, being more likely able to transcribe bad pronunciations. These are both necessary for our web application.\nThe branch that needs to be looked at for this milestone is the 'add-whisper' branch, which is most up to date, not main. To see the limited back-end NodeJS code that makes calls to the Whisper API, go to this repository: https://github.com/cttomcak/questionable-whisper-backend. We can provide the API key if needed, as it is not stored in the repository.\nDeveloping\nOnce you've created a project and installed dependencies with npm install (or pnpm install or yarn), start a development server:\nExample :npm run dev\n\n# or start the server and open the app in a new browser tab\nnpm run dev -- --openBuilding\nTo build a docker image of the application run:\nExample :docker build . -t pronunciationpal:v1.0Then, to run it as a container, use the following\nExample :docker run -p 3000:3000 pronunciationpal:v1.0The version numbers may be set to whatever by changing v1.0 to any other version.\nYou can preview the production build with npm run preview.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            chunks   (filesForDocs/.../WhisperRecord.ts)\n                        \n                        \n                            dispatch   (filesForDocs/.../WhisperRecord.ts)\n                        \n                        \n                            errors   (filesForDocs/.../WordSearch.ts)\n                        \n                        \n                            mediaRecorder   (filesForDocs/.../WhisperRecord.ts)\n                        \n                        \n                            recognizer   (filesForDocs/.../WordSearch.ts)\n                        \n                        \n                            recording   (filesForDocs/.../WhisperRecord.ts)\n                        \n                        \n                            recording   (filesForDocs/.../WordSearch.ts)\n                        \n                        \n                            search_text   (filesForDocs/.../WordSearch.ts)\n                        \n                        \n                            speech_enabled   (filesForDocs/.../WordSearch.ts)\n                        \n                        \n                            transcription   (filesForDocs/.../WhisperRecord.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    filesForDocs/WhisperRecord.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        chunks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BlobPart[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n            \n                \n                    Stores audio chunks\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEventDispatcher()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaRecorder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaRecorder | null\n\n                    \n                \n\n            \n                \n                    MediaRecorder Object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recording\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n            \n                \n                    Boolean to track whether we're recording or not\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transcription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n\n            \n                \n                    Resulting transcription from Whisper\n\n                \n            \n\n        \n    \n\n    filesForDocs/WordSearch.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recognizer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recording\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search_text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speech_enabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
